function isIpad(i) { return testUserAgent(i, /iPad/i); }
function isIphone(i) { return testUserAgent(i, /iPhone/i); }
function isIOS(i) { return testUserAgent(i, /iPad|iPhone|iPod/i); }
function isAndroid(i) { return !isIOS(i); }
function isPhablet(i) { var n = i.innerWidth, t = i.innerHeight, e = Math.min(n, t), a = Math.max(n, t); return e > 390 && e < 520 && a > 620 && a < 800; }
function isTablet(i) { var n = i.innerWidth, t = i.innerHeight, e = Math.min(n, t), a = Math.max(n, t); return e > 460 && e < 820 && a > 780 && a < 1400; }
function isDevice(i) { return matchMedia$1(i, "(any-pointer:coarse)"); }
function isHybrid(i) { return isCordova(i) || isCapacitorNative(i); }
function isCordova(i) { var n = i; return !!(n.cordova || n.phonegap || n.PhoneGap); }
function isCapacitorNative(i) { var n = i.Capacitor; return !(!n || !n.isNative); }
function isElectron(i) { return testUserAgent(i, /electron/); }
function isStandaloneMode(i) { return i.matchMedia("(display-mode: standalone)").matches; }
function needInputShims(i) { return isIOS(i) && isDevice(i); }
function testUserAgent(i, n) { return n.test(i.navigator.userAgent); }
function matchMedia$1(i, n, t) {
    if (t === void 0) { t = !1; }
    return i.matchMedia ? i.matchMedia(n).matches : t;
}
export { isDevice as a, isHybrid as b, isStandaloneMode as c, needInputShims as d, isAndroid as e, isCordova as f, isElectron as g, isIOS as h, isIpad as i, isIphone as j, isPhablet as k, isTablet as l, matchMedia$1 as m };
