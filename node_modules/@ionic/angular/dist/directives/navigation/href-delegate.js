import { Directive, ElementRef, HostListener, Input, Optional } from '@angular/core';
import { Router } from '@angular/router';
var HrefDelegate = /** @class */ (function () {
    function HrefDelegate(router, elementRef) {
        this.router = router;
        this.elementRef = elementRef;
    }
    Object.defineProperty(HrefDelegate.prototype, "routerLink", {
        set: function (_) {
            this.elementRef.nativeElement.button = true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HrefDelegate.prototype, "href", {
        get: function () {
            return this.elementRef.nativeElement.href;
        },
        set: function (value) {
            this.elementRef.nativeElement.href = value;
        },
        enumerable: true,
        configurable: true
    });
    HrefDelegate.prototype.onClick = function (ev) {
        var url = this.href;
        if (this.router && url != null && url[0] !== '#' && url.indexOf('://') === -1) {
            ev.preventDefault();
            this.router.navigateByUrl(url);
        }
    };
    HrefDelegate.decorators = [
        { type: Directive, args: [{
                    selector: 'ion-anchor,ion-button,ion-item'
                },] },
    ];
    /** @nocollapse */
    HrefDelegate.ctorParameters = function () { return [
        { type: Router, decorators: [{ type: Optional }] },
        { type: ElementRef }
    ]; };
    HrefDelegate.propDecorators = {
        routerLink: [{ type: Input }],
        href: [{ type: Input }],
        onClick: [{ type: HostListener, args: ['click', ['$event'],] }]
    };
    return HrefDelegate;
}());
export { HrefDelegate };
