import { AnimationBuilder, HTMLIonOverlayElement, IonicConfig, OverlayInterface, OverlayMap } from '../interface';
export declare function createOverlay<T extends HTMLIonOverlayElement & Required<B>, B>(element: T, opts: B): Promise<T>;
export declare function dismissOverlay(data: any, role: string | undefined, overlays: OverlayMap, id: number): Promise<void>;
export declare function getTopOverlay<T extends HTMLIonOverlayElement>(overlays: OverlayMap): T;
export declare function getHighestId(overlays: OverlayMap): number;
export declare function removeLastOverlay(overlays: OverlayMap): Promise<void>;
export declare function present(overlay: OverlayInterface, name: keyof IonicConfig, iosEnterAnimation: AnimationBuilder, mdEnterAnimation: AnimationBuilder, opts?: any): Promise<void>;
export declare function dismiss(overlay: OverlayInterface, data: any | undefined, role: string | undefined, name: keyof IonicConfig, iosLeaveAnimation: AnimationBuilder, mdLeaveAnimation: AnimationBuilder, opts?: any): Promise<void>;
export declare function autoFocus(containerEl: HTMLElement): HTMLElement | null;
export declare function eventMethod<T>(element: HTMLElement, eventName: string, callback?: (detail: T) => void): Promise<T>;
export declare function onceEvent(element: HTMLElement, eventName: string, callback: (ev: Event) => void): void;
export declare function isCancel(role: string | undefined): boolean;
export declare const BACKDROP = "backdrop";
